#!/bin/bash

set -e

absolute_path() {
  (cd $1 && pwd)
}

scripts_path=$(absolute_path `dirname $0`)

CURRENT_DIR=$(absolute_path $scripts_path/..)

while getopts "d:c:l" opt; do
  case $opt in
    d)
      DIEGO_RELEASE_DIR=$OPTARG
      ;;
    c)
      CF_RELEASE_DIR=$OPTARG
      ;;
    l)
      echo 'Using misc-stubs/legacy-releases.yml for legacy versioned releases'
      LEGACY_STUBS=$CURRENT_DIR/misc-stubs/legacy-releases.yml
      ;;
    \?)
      echo no dawg >&2
      ;;
  esac
done

OUTPUT_DIR=$CURRENT_DIR/manifests
TMP_DIR=`mktemp -d -t upgrade-stable-manifests.XXXXXXXXXXXX`

echo DIEGO_RELEASE_DIR=$DIEGO_RELEASE_DIR
echo CF_RELEASE_DIR=$CF_RELEASE_DIR

function usage() {
  >&2 echo "
  Usage: $0 -d DIEGO_RELEASE_DIR -c CF_RELEASE_DIR (-l)

  -d diego release directory location
  -c cf release directory location
  -l legacy release versions"
  exit 1
}

if [ ! -d "${DIEGO_RELEASE_DIR}" ]; then
  >&2 echo "Diego Release Directory '${DIEGO_RELEASE_DIR}' is not a directory"
  usage
fi

if [ ! -d "${CF_RELEASE_DIR}" ]; then
  >&2 echo "CF Release Directory '${CF_RELEASE_DIR}' is not a directory"
  usage
fi

mkdir -p $OUTPUT_DIR

DIRECTOR_UUID=$(bosh status | grep UUID | awk '{print $2}')

echo "director_uuid: ${DIRECTOR_UUID}" > $TMP_DIR/director.yml

pushd $CF_RELEASE_DIR
  BOSH_RELEASES_DIR=$PWD/.. ./scripts/generate-bosh-lite-dev-manifest
  spiff merge bosh-lite/deployments/cf.yml \
    $CURRENT_DIR/misc-stubs/diego-default.yml \
    $LEGACY_STUBS > $OUTPUT_DIR/cf.yml
popd

pushd $DIEGO_RELEASE_DIR
  ./scripts/generate-deployment-manifest \
    $TMP_DIR/director.yml \
    manifest-generation/bosh-lite-stubs/property-overrides.yml \
    $CURRENT_DIR/database/instance-count-overrides.yml \
    manifest-generation/bosh-lite-stubs/persistent-disk-overrides.yml \
    $CURRENT_DIR/database/iaas-settings.yml \
    manifest-generation/bosh-lite-stubs/additional-jobs.yml \
    $OUTPUT_DIR \
    > $TMP_DIR/database.yml

  spiff merge $TMP_DIR/database.yml $CURRENT_DIR/database/deployment-name.yml $LEGACY_STUBS > $OUTPUT_DIR/database.yml

  ./scripts/generate-deployment-manifest \
    $TMP_DIR/director.yml \
    manifest-generation/bosh-lite-stubs/property-overrides.yml \
    $CURRENT_DIR/brain-and-pals/instance-count-overrides.yml \
    manifest-generation/bosh-lite-stubs/persistent-disk-overrides.yml \
    $CURRENT_DIR/brain-and-pals/iaas-settings.yml \
    manifest-generation/bosh-lite-stubs/additional-jobs.yml \
    $OUTPUT_DIR \
    > $TMP_DIR/brain-and-pals.yml

  spiff merge $TMP_DIR/brain-and-pals.yml $CURRENT_DIR/brain-and-pals/deployment-name.yml $LEGACY_STUBS > $OUTPUT_DIR/brain-and-pals.yml

  ./scripts/generate-deployment-manifest \
    $TMP_DIR/director.yml \
    manifest-generation/bosh-lite-stubs/property-overrides.yml \
    $CURRENT_DIR/cell1/instance-count-overrides.yml \
    manifest-generation/bosh-lite-stubs/persistent-disk-overrides.yml \
    $CURRENT_DIR/cell1/iaas-settings.yml \
    manifest-generation/bosh-lite-stubs/additional-jobs.yml \
    $OUTPUT_DIR \
    > $TMP_DIR/cell1.yml

  spiff merge $TMP_DIR/cell1.yml $CURRENT_DIR/cell1/deployment-name.yml $LEGACY_STUBS > $OUTPUT_DIR/cell1.yml

  ./scripts/generate-deployment-manifest \
    $TMP_DIR/director.yml \
    manifest-generation/bosh-lite-stubs/property-overrides.yml \
    $CURRENT_DIR/cell2/instance-count-overrides.yml \
    manifest-generation/bosh-lite-stubs/persistent-disk-overrides.yml \
    $CURRENT_DIR/cell2/iaas-settings.yml \
    manifest-generation/bosh-lite-stubs/additional-jobs.yml \
    $OUTPUT_DIR \
    > $TMP_DIR/cell2.yml

  spiff merge $TMP_DIR/cell2.yml $CURRENT_DIR/cell2/deployment-name.yml $LEGACY_STUBS > $OUTPUT_DIR/cell2.yml
popd
